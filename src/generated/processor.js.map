{"version":3,"file":"processor.js","sources":["../text-encoder-decoder.js","wasm/synthesizers.js","../processor.ts","../constants.ts"],"sourcesContent":["// TextEncoder/TextDecoder polyfills for utf-8 - an implementation of TextEncoder/TextDecoder APIs\n// Written in 2013 by Viktor Mukhachev <vic99999@yandex.ru>\n// To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.\n// You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\n\n// Some important notes about the polyfill below:\n// Native TextEncoder/TextDecoder implementation is overwritten\n// String.prototype.codePointAt polyfill not included, as well as String.fromCodePoint\n// TextEncoder.prototype.encode returns a regular array instead of Uint8Array\n// No options (fatal of the TextDecoder constructor and stream of the TextDecoder.prototype.decode method) are supported.\n// TextDecoder.prototype.decode does not valid byte sequences\n// This is a demonstrative implementation not intended to have the best performance\n\n// http://encoding.spec.whatwg.org/#textencoder\n;(function (window) {\n  function TextEncoder() {}\n  TextEncoder.prototype.encode = function (string) {\n    const octets = []\n    const length = string.length\n    let i = 0\n    while (i < length) {\n      const codePoint = string.codePointAt(i)\n      let c = 0\n      let bits = 0\n      if (codePoint <= 0x0000007f) {\n        c = 0\n        bits = 0x00\n      } else if (codePoint <= 0x000007ff) {\n        c = 6\n        bits = 0xc0\n      } else if (codePoint <= 0x0000ffff) {\n        c = 12\n        bits = 0xe0\n      } else if (codePoint <= 0x001fffff) {\n        c = 18\n        bits = 0xf0\n      }\n      octets.push(bits | (codePoint >> c))\n      c -= 6\n      while (c >= 0) {\n        octets.push(0x80 | ((codePoint >> c) & 0x3f))\n        c -= 6\n      }\n      i += codePoint >= 0x10000 ? 2 : 1\n    }\n    return octets\n  }\n  globalThis.TextEncoder = TextEncoder\n  if (!window.TextEncoder) window.TextEncoder = TextEncoder\n\n  function TextDecoder() {}\n  TextDecoder.prototype.decode = function (octets) {\n    if (!octets) return ''\n    let string = ''\n    let i = 0\n    while (i < octets.length) {\n      let octet = octets[i]\n      let bytesNeeded = 0\n      let codePoint = 0\n      if (octet <= 0x7f) {\n        bytesNeeded = 0\n        codePoint = octet & 0xff\n      } else if (octet <= 0xdf) {\n        bytesNeeded = 1\n        codePoint = octet & 0x1f\n      } else if (octet <= 0xef) {\n        bytesNeeded = 2\n        codePoint = octet & 0x0f\n      } else if (octet <= 0xf4) {\n        bytesNeeded = 3\n        codePoint = octet & 0x07\n      }\n      if (octets.length - i - bytesNeeded > 0) {\n        let k = 0\n        while (k < bytesNeeded) {\n          octet = octets[i + k + 1]\n          codePoint = (codePoint << 6) | (octet & 0x3f)\n          k += 1\n        }\n      } else {\n        codePoint = 0xfffd\n        bytesNeeded = octets.length - i\n      }\n      string += String.fromCodePoint(codePoint)\n      i += bytesNeeded + 1\n    }\n    return string\n  }\n  globalThis.TextDecoder = TextDecoder\n  if (!window.TextDecoder) window.TextDecoder = TextDecoder\n})(\n  typeof globalThis === 'undefined'\n    ? typeof global === 'undefined'\n      ? typeof self === 'undefined'\n        ? undefined\n        : self\n      : global\n    : globalThis,\n)\n","let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n*/\nexport class SoundFont2Synthesizer {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(SoundFont2Synthesizer.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_soundfont2synthesizer_free(ptr);\n    }\n    /**\n    * @param {Uint8Array} sf2_bytes\n    * @param {number} sample_rate\n    */\n    constructor(sf2_bytes, sample_rate) {\n        const ptr0 = passArray8ToWasm0(sf2_bytes, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.soundfont2synthesizer_new(ptr0, len0, sample_rate);\n        return SoundFont2Synthesizer.__wrap(ret);\n    }\n    /**\n    * @param {number} key\n    * @param {number} vel\n    * @param {number | undefined} delay_frame\n    */\n    noteOn(key, vel, delay_frame) {\n        wasm.soundfont2synthesizer_noteOn(this.__wbg_ptr, key, vel, !isLikeNone(delay_frame), isLikeNone(delay_frame) ? 0 : delay_frame);\n    }\n    /**\n    * @param {number} key\n    * @param {number | undefined} delay_frame\n    */\n    noteOff(key, delay_frame) {\n        wasm.soundfont2synthesizer_noteOff(this.__wbg_ptr, key, !isLikeNone(delay_frame), isLikeNone(delay_frame) ? 0 : delay_frame);\n    }\n    /**\n    * @param {number} block_size\n    * @returns {any}\n    */\n    nextBlock(block_size) {\n        const ret = wasm.soundfont2synthesizer_nextBlock(this.__wbg_ptr, block_size);\n        return takeObject(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_898a68150f225f2e = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_502d29070ea18557 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('synthesizers_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","import './text-encoder-decoder.js';\nimport { PROCESSOR_NAME } from './constants.js';\nimport init, { SoundFont2Synthesizer } from './generated/wasm/synthesizers';\nfunction timeToFrames(time, sampleRate) {\n    return Math.round(time * sampleRate);\n}\nclass SoundFont2SynthProcessorImpl extends AudioWorkletProcessor {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"sampleRate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"synth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sf2Bytes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_port\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.port.onmessage = (event) => {\n            this.onmessageForSetup(event);\n        };\n        this.sampleRate = undefined;\n        this.synth = undefined;\n        this.sf2Bytes = undefined;\n    }\n    onmessageForSetup(event) {\n        const data = event.data;\n        let postData;\n        switch (data.type) {\n            case 'sendWasmModule':\n                init(WebAssembly.compile(data.wasmBytes))\n                    .then(() => {\n                    const data = {\n                        type: 'loadedWasmModule',\n                    };\n                    this.port.postMessage(data);\n                })\n                    .catch(() => {\n                    console.error('An error occurred during wasm initialization');\n                });\n                this.sf2Bytes = data.sf2Bytes;\n                break;\n            case 'initializeSynthesizer': {\n                if (this.sf2Bytes == null) {\n                    throw new Error('sf2Bytes is undefined');\n                }\n                this.sampleRate = data.sampleRate;\n                this.synth = new SoundFont2Synthesizer(new Uint8Array(this.sf2Bytes), data.sampleRate);\n                postData = {\n                    type: 'initializedSynthesizer',\n                };\n                this.port.postMessage(postData);\n                break;\n            }\n            case 'connectToPort':\n                this._port = event.ports[0];\n                this._port.onmessage = (event) => {\n                    this.onmessage(event);\n                };\n                postData = {\n                    type: 'connectedToPort',\n                };\n                this.port.postMessage(postData);\n                break;\n            default:\n                break;\n        }\n    }\n    onmessage(event) {\n        const data = event.data;\n        switch (data.type) {\n            case 'noteOn':\n                this.noteOn(data.key, data.vel, data.delayTime);\n                break;\n            case 'noteOff':\n                this.noteOff(data.key, data.delayTime);\n                break;\n            default:\n                break;\n        }\n    }\n    noteOn(key, vel, delayTime) {\n        if (this.sampleRate === undefined || this.synth === undefined) {\n            return;\n        }\n        this.synth.noteOn(key, vel, timeToFrames(delayTime ?? 0, this.sampleRate));\n    }\n    noteOff(key, delayTime) {\n        if (this.sampleRate === undefined || this.synth === undefined) {\n            return;\n        }\n        this.synth.noteOff(key, timeToFrames(delayTime ?? 0, this.sampleRate));\n    }\n    process(_inputs, outputs) {\n        if (this.synth === undefined) {\n            return true;\n        }\n        const outputChannels = outputs[0];\n        const blockSize = outputChannels[0].length;\n        const nextBlock = this.synth.nextBlock(blockSize);\n        outputChannels[0].set(nextBlock[0]);\n        outputChannels.length > 1 && outputChannels[1].set(nextBlock[1]);\n        // Returning true tells the Audio system to keep going.\n        return true;\n    }\n}\nregisterProcessor(PROCESSOR_NAME, SoundFont2SynthProcessorImpl);\n//# sourceMappingURL=processor.js.map","export const PROCESSOR_NAME = 'sf2-synth-processor';\n//# sourceMappingURL=constants.js.map"],"names":["window","TextEncoder","TextDecoder","prototype","encode","string","octets","length","i","codePoint","codePointAt","c","bits","push","globalThis","decode","octet","bytesNeeded","k","String","fromCodePoint","global","self","undefined","wasm","heap","Array","fill","getObject","idx","heap_next","takeObject","ret","dropObject","addHeapObject","obj","debugString","val","type","description","name","isArray","debug","builtInMatches","exec","toString","call","className","JSON","stringify","_","Error","message","stack","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","set","read","written","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","ignoreBOM","fatal","isLikeNone","x","SoundFont2Synthesizer","__wrap","ptr","Object","create","__wbg_ptr","__destroy_into_raw","this","free","__wbg_soundfont2synthesizer_free","constructor","sf2_bytes","sample_rate","ptr0","malloc","passArray8ToWasm0","__wbindgen_malloc","len0","soundfont2synthesizer_new","noteOn","key","vel","delay_frame","soundfont2synthesizer_noteOn","noteOff","soundfont2synthesizer_noteOff","nextBlock","block_size","soundfont2synthesizer_nextBlock","__wbg_get_imports","imports","wbg","__wbindgen_object_drop_ref","arg0","__wbindgen_number_new","__wbg_new_898a68150f225f2e","__wbg_set_502d29070ea18557","arg1","arg2","__wbindgen_debug_string","ptr1","realloc","subarray","len","mem","offset","code","charCodeAt","slice","passStringToWasm0","__wbindgen_realloc","len1","__wbindgen_throw","async","__wbg_init","input","URL","document","currentScript","src","baseURI","href","Request","fetch","instance","module","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","Instance","__wbg_load","exports","__wbindgen_wasm_module","__wbg_finalize_init","timeToFrames","time","sampleRate","Math","round","SoundFont2SynthProcessorImpl","AudioWorkletProcessor","super","defineProperty","enumerable","configurable","writable","value","port","onmessage","event","onmessageForSetup","synth","sf2Bytes","data","postData","init","compile","wasmBytes","then","postMessage","catch","error","_port","ports","delayTime","process","_inputs","outputs","outputChannels","blockSize","registerProcessor"],"mappings":"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"}